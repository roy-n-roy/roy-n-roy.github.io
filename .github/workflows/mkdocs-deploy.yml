name: MkDocs Test and Deploy

on: 
  push:
    # releaseブランチのdocsディレクトリ配下で
    # Markdown、画像、設定ファイルがpushされた時に実行する
    branches:
      - release
    paths:
      - 'docs/**/*.md'
      - 'docs/imgs/**'
      - 'mkdocs.yml'
      - 'pyproject.toml'

jobs:
  deploy:
    runs-on: windows-latest

    steps:
      # シンボリックリンクを扱えるようGitを設定する
      - name: Git config
        run: |
          git config --global core.symlinks true
          git config --global user.name "github-actions"
          git config --global user.email actions@github.com

      # リポジトリをチェックアウトする
      # MkDocsでgit-revision-dateプラグインを利用している場合は、
      # 全てのコミット履歴をfetchする(fetch-depth: 0)
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # submoduleをcloneする
      # docsフォルダ内にsubmoduleへのsymlinkが含まれるため、restoreする
      - name: Checkout submodules
        run: |
          git submodule init
          git submodule update
          rm -r docs
          git restore docs

      # Python3.8をセットアップ
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'

      # poetry.lockのハッシュ値が一致する場合は、
      # 以前に実行した際のキャッシュを復元する
      - name: Get pip cache
        id: cache-pip
        uses: actions/cache@v2
        with:
          path: ~/AppData/Local/pypoetry/Cache
          key: ${{ runner.os }}--poetry--${{ hashFiles('poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}--poetry--${{ hashFiles('poetry.lock') }}
            ${{ runner.os }}--poetry--

      # Poetryをインストールする
      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python
          echo "$HOME/.poetry/bin"  | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      # poetry.lockから依存関係をインストールする
      - name: Install dependencies
        run: |
          poetry install --no-root --no-dev

      # MkDocsでGitHubへデプロイする
      - name: MkDocs Deploy
        env:
          GOOGLE_ANALYTICS_TRACKING_ID: ${{ secrets.GOOGLE_ANALYTICS_TRACKING_ID }}
        run: |
          git fetch --depth=1 origin master
          poetry run mkdocs gh-deploy

      # Slackへ通知する
      - name: Notify Slack
        if: always()
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,author,workflow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

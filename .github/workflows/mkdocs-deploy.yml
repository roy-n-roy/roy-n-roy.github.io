name: MkDocs Test and Deploy

on: 
  push:
    # releaseブランチへのpush時に実行する
    branches: release

jobs:
  deploy:
    runs-on: windows-latest

    steps:
      # シンボリックリンクを扱えるようGitを設定する
      - name: Git config
        run: |
          git config --global core.symlinks true
          git config --global user.name "github-actions"
          git config --global user.email actions@github.com

      # リポジトリをチェックアウトする
      # MkDocsでgit-revision-dateプラグインを利用している場合は、
      # 全てのコミット履歴をfetchする(fetch-depth: 0)
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # submoduleをcloneする
      # docsフォルダ内にsubmoduleへのsymlinkが含まれるため、restoreする
      - name: Checkout submodules
        run: |
          git submodule init
          git submodule update
          rm -r docs
          git restore docs

      # Python3.8をセットアップ
      - name: Set up Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.8'

      # Pipenvをインストールする
      - name: Install Pipenv
        run: |
          python -m pip install --upgrade pip
          pip install pipenv

      # Pipfile.lockのハッシュ値が一致する場合は、
      # 以前に実行した際のvirtualenvをキャッシュから復元する
      - name: Get venv cache
        id: cache-venv
        uses: actions/cache@v1
        with:
          path: ~\.virtualenvs
          key: venv-${{ hashFiles('Pipfile.lock') }}

      # Pipfile.lockから依存関係をインストールする
      - name: Install dependencies
        if: steps.cache-venv.outputs.cache-hit != 'true'
        run: |
          pipenv install --verbose --dev --deploy --ignore-pipfile

      # pytestでテストを実行する
      - name: Test with pytest
        run: |
          pipenv run pytest

      # MkDocsでGitHubへデプロイする
      - name: MkDocs Deploy
        run: |
          git fetch --depth=1 origin master
          pipenv run mkdocs gh-deploy
